#!/bin/bash
clear
mkdir -p ~/.basher/
mkdir -p ~/.basher/cache/

U1=~/.basher/cache/chat1.txt
U2=~/.basher/cache/chat2.txt

file=~/.basher/user.txt
account=~/.basher/account.txt

while :; do
	if [ -f $file ]; then
		while :; do
			mapfile -t -O 1 name <"$file"
			for name in ${name[1]}; do
				printf "Welcome back %s\n" "${name}!"
				printf "\n"
				printf "Type 'help' for more information.\n\n"
			done
		break;
		done
	
		while :; do
			read -rp "/" input
			printf "\n"
			for input in "${input[@]}"; do
				if [[ "$input" == "help" ]]; then
					printf "You can also use some of these commands WHILE CHATTING by adding '/' before.\ne.g '/help'\n\nhelp - Show a list of commands.\naccount - Show your account stats.\nreset - Reset your account stats.\nexit - Quit Basher.\nclear - Clear your terminal.\nchat - Start chatting.\ndel <value> - Delete the user's cached chat. (You cannot delete other user's cache while chatting, it will only delete your own.)\n\n"
					continue 2;
				elif [[ "$input" == "account" ]]; then
					cat ~/.basher/account.txt
					printf "\n"
					continue 2;
				elif [[ "$input" == "reset" ]]; then
					if [ -f "$file" ]; then
						clear
						rm -rf ~/.basher/user.txt
						rm -rf ~/.basher/account.txt
						printf "'user.txt' was removed successfully and your account has been reseted.\n\nYou will now create your new account in 5 seconds! DO NOT TYPE ANYTHING\n\n"
						sleep 5
						clear
						exec "$0"
					else 
						clear
						printf "We cannot reset your account because $file does not exist.\n\nYou'll have to create a new account.\n\nCreating a new account in 5 seconds... DO NOT TYPE ANYTHING"
						sleep 5
						clear
						exec "$0"
					fi
				elif [[ "$input" == "exit" ]]; then
					clear
					exit 1
				elif [[ "$input" == "clear" ]]; then
					clear
					printf "Welcome back %s\n" "${name}!"
					printf "\n"
					printf "Type 'help' for more information.\n\n"
					continue 2;
				elif [[ "$input" == "chat" ]]; then
					clear
					break
				elif [[ "$input" == "del" ]]; then
					printf "You need to add a valid value! (THERE ARE ONLY 2 USERS!)\ne.g: 'del 1' to delete User 1 cache.\n\n"
					continue 2;
				elif [[ "$input" == "del 1" ]];then
					if [ -f $U1 ]; then
						printf "Cache deleted!\n\n"
						rm $U1
						continue 2;
					else
						printf "User 1 doesn't have any cache to delete.\n\n"
						continue 2;
					fi
				elif [[ "$input" == "del 2" ]]; then
					if [ -f $U2 ]; then
						printf "Cache deleted!\n\n"
						rm $U2
						continue 2;
					else
						printf "User 2 doesn't have any cache to delete.\n\n"
						continue 2;
					fi
				else
					printf "Command not found.\n\n"
					continue 2;
				fi
			done
		break;
		done
		
		while :; do
			mapfile -t -O 1 user <"$file"
			for user in ${user[3]}; do
				if [[ "$user" == "1" ]]; then
					nc -vl 69420 > ~/.basher/cache/chat2.txt
					nc -N $ip2 69420 < ~/.basher/cache/chat1.txt
					read -rp "$name: " text
					for text in "${text[@]}"; do
						if [[ "$text" == "" ]]; then
							printf "You need to type something in order to send a message.\n"
							continue 2;
						elif [[ "$text" == '/help' ]]; then
							printf "\n"
							printf "While chatting you are reduced to a certain amount of commands such as:\n/help\n/exit\n/clear\n/del\n\n"
						elif [[ "$text" == '/exit' ]]; then
							clear
							exec "$0"
						elif [[ "$text" == '/clear' ]]; then
							clear
							continue 2;
						elif [[ "$text" == '/del' ]]; then
							if [ -f $U1 ]; then
								printf "\nYou successfully deleted your own cache!\n\n"
								rm $U1
								continue 2;
							else
								printf "\nThere is no cache to delete\n\n"
								continue 2;
							fi
						else
							cat ~/.basher/cache/chat2.txt
							printf "$name: $text\n" >> $U1
							continue 2;
						fi
					done	
				else
					nc -vl 69420 > ~/.basher/cache/chat1.txt
					nc -N $ip1 69420 < ~/.basher/cache/chat2.txt
					read -rp "$name: " text
					for text in "${text[@]}"; do
						if [[ "$text" == "" ]]; then
							printf "You need to type something in order to send a message.\n"
							continue 2;
						elif [[ "$text" == '/help' ]]; then
							printf "\n"
							printf "While chatting you are reduced to a certain amount of commands such as:\n/help\n/exit\n/clear\n/del\n\n"
						elif [[ "$text" == '/exit' ]]; then
							clear
							exec "$0"
						elif [[ "$text" == '/clear' ]]; then
							clear
							continue 2;
						elif [[  "$text" == '/del' ]]; then
							if [ -f $U2 ]; then
								printf "\nYou successfully deleted your own cache!\n\n"
								rm $U2
								continue 2;
							else
								printf "\nThere is no cache to delete\n\n"
								continue 2;
							fi
						else
							cat ~/.basher/cache/chat1.txt
							printf "$name: $text\n" >> $U2
							continue 2;
						fi		
					done
				fi
			done
		done
		break;			
		continue 2;
	else
		while :; do
			read -rp "What's your name? " name
			for name in "${name[@]}"; do
				if [[ "$name" = ""  ]]; then
					printf "Invalid name characters, please try again.\n"
					continue 2;
				fi
			done
		break;
		done
		
		clear
		printf "Welcome %s\n" "${name}!"
		printf "\n"
	
		while :; do
			read -rp "How old are you? " age
			for age in "${age[@]}"; do
				if [[ "$age" -lt 10 ]]; then
					printf "Wow that's a little too young to join, sorry!\n"
					continue 2;
				fi
			done
		break;
		done
		
		printf "Age registered successfully!\n"
		printf "You are $age years old.\n\n"
		clear
		
		while :; do
			printf "(YOU MUST ONLY TYPE NUMBERS!)\n\n"
			read -rp "Are you User 1 or User 2? (IP1/IP2) " user
			for user in "${user[@]}"; do
				if [[ "$user" -gt 2 ]]; then
					clear
					printf "There are only 2 users!\n"
					continue 2;
				elif [[ "$user" -lt 1 ]]; then
					clear
					printf "You can only join as User 1 or User 2!\n"
					continue 2;
				fi
			done
		break;
		done
		clear

		while :; do
			read -rp "You'll need to type your ip address. " ip
			mapfile -t -O 1 user <"$file"
			for user in ${user[3]}; do
				if [[ "$user[@]" == 1 ]]; then
					$ip = ip1
				else
					$ip = ip2
				fi
			done
		break;
		done
		clear

		printf "Your account has been created under ~/.basher/user.txt\n\n"
		printf "$name\n$age\n$user\n$ip\n" > $file
		printf "Username = $name\nAge = $age\nUser = $user\nIp = $ip\n" > $account

		cat $account
		printf "\n"
		printf "Wait..."
		printf "\n"
		sleep 5
		clear
		exec "$0"
	
	fi
done
